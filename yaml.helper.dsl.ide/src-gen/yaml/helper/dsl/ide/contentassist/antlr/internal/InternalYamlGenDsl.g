/*
 * generated by Xtext 2.22.0
 */
grammar InternalYamlGenDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package yaml.helper.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package yaml.helper.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import yaml.helper.dsl.services.YamlGenDslGrammarAccess;

}
@parser::members {
	private YamlGenDslGrammarAccess grammarAccess;

	public void setGrammarAccess(YamlGenDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getEntriesAssignment()); }
		(rule__Source__EntriesAssignment)*
		{ after(grammarAccess.getSourceAccess().getEntriesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceElement
entryRuleSourceElement
:
{ before(grammarAccess.getSourceElementRule()); }
	 ruleSourceElement
{ after(grammarAccess.getSourceElementRule()); } 
	 EOF 
;

// Rule SourceElement
ruleSourceElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceElementAccess().getAlternatives()); }
		(rule__SourceElement__Alternatives)
		{ after(grammarAccess.getSourceElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBodyElement
entryRuleBodyElement
:
{ before(grammarAccess.getBodyElementRule()); }
	 ruleBodyElement
{ after(grammarAccess.getBodyElementRule()); } 
	 EOF 
;

// Rule BodyElement
ruleBodyElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyElementAccess().getAlternatives()); }
		(rule__BodyElement__Alternatives)
		{ after(grammarAccess.getBodyElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtend
entryRuleExtend
:
{ before(grammarAccess.getExtendRule()); }
	 ruleExtend
{ after(grammarAccess.getExtendRule()); } 
	 EOF 
;

// Rule Extend
ruleExtend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendAccess().getGroup()); }
		(rule__Extend__Group__0)
		{ after(grammarAccess.getExtendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyNestedField
entryRuleAnyNestedField
:
{ before(grammarAccess.getAnyNestedFieldRule()); }
	 ruleAnyNestedField
{ after(grammarAccess.getAnyNestedFieldRule()); } 
	 EOF 
;

// Rule AnyNestedField
ruleAnyNestedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyNestedFieldAccess().getAlternatives()); }
		(rule__AnyNestedField__Alternatives)
		{ after(grammarAccess.getAnyNestedFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedField
entryRuleNestedField
:
{ before(grammarAccess.getNestedFieldRule()); }
	 ruleNestedField
{ after(grammarAccess.getNestedFieldRule()); } 
	 EOF 
;

// Rule NestedField
ruleNestedField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedFieldAccess().getGroup()); }
		(rule__NestedField__Group__0)
		{ after(grammarAccess.getNestedFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedFields
entryRuleNestedFields
:
{ before(grammarAccess.getNestedFieldsRule()); }
	 ruleNestedFields
{ after(grammarAccess.getNestedFieldsRule()); } 
	 EOF 
;

// Rule NestedFields
ruleNestedFields 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedFieldsAccess().getGroup()); }
		(rule__NestedFields__Group__0)
		{ after(grammarAccess.getNestedFieldsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringProperty
entryRuleStringProperty
:
{ before(grammarAccess.getStringPropertyRule()); }
	 ruleStringProperty
{ after(grammarAccess.getStringPropertyRule()); } 
	 EOF 
;

// Rule StringProperty
ruleStringProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringPropertyAccess().getGroup()); }
		(rule__StringProperty__Group__0)
		{ after(grammarAccess.getStringPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValuesProperty
entryRuleValuesProperty
:
{ before(grammarAccess.getValuesPropertyRule()); }
	 ruleValuesProperty
{ after(grammarAccess.getValuesPropertyRule()); } 
	 EOF 
;

// Rule ValuesProperty
ruleValuesProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuesPropertyAccess().getGroup()); }
		(rule__ValuesProperty__Group__0)
		{ after(grammarAccess.getValuesPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeProperty
entryRuleTypeProperty
:
{ before(grammarAccess.getTypePropertyRule()); }
	 ruleTypeProperty
{ after(grammarAccess.getTypePropertyRule()); } 
	 EOF 
;

// Rule TypeProperty
ruleTypeProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypePropertyAccess().getGroup()); }
		(rule__TypeProperty__Group__0)
		{ after(grammarAccess.getTypePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValues
entryRuleValues
:
{ before(grammarAccess.getValuesRule()); }
	 ruleValues
{ after(grammarAccess.getValuesRule()); } 
	 EOF 
;

// Rule Values
ruleValues 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValuesAccess().getAlternatives()); }
		(rule__Values__Alternatives)
		{ after(grammarAccess.getValuesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceElementAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getSourceElementAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceElementAccess().getImportParserRuleCall_1()); }
		ruleImport
		{ after(grammarAccess.getSourceElementAccess().getImportParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BodyElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyElementAccess().getExtendParserRuleCall_0()); }
		ruleExtend
		{ after(grammarAccess.getBodyElementAccess().getExtendParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBodyElementAccess().getAnyNestedFieldParserRuleCall_1()); }
		ruleAnyNestedField
		{ after(grammarAccess.getBodyElementAccess().getAnyNestedFieldParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBodyElementAccess().getPropertyParserRuleCall_2()); }
		ruleProperty
		{ after(grammarAccess.getBodyElementAccess().getPropertyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyNestedField__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyNestedFieldAccess().getNestedFieldParserRuleCall_0()); }
		ruleNestedField
		{ after(grammarAccess.getAnyNestedFieldAccess().getNestedFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnyNestedFieldAccess().getNestedFieldsParserRuleCall_1()); }
		ruleNestedFields
		{ after(grammarAccess.getAnyNestedFieldAccess().getNestedFieldsParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getStringPropertyParserRuleCall_0()); }
		ruleStringProperty
		{ after(grammarAccess.getPropertyAccess().getStringPropertyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getValuesPropertyParserRuleCall_1()); }
		ruleValuesProperty
		{ after(grammarAccess.getPropertyAccess().getValuesPropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getTypePropertyParserRuleCall_2()); }
		ruleTypeProperty
		{ after(grammarAccess.getPropertyAccess().getTypePropertyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__KeyAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertyAccess().getKeyKeyKeyword_0_0_0()); }
		'key'
		{ after(grammarAccess.getStringPropertyAccess().getKeyKeyKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringPropertyAccess().getKeyNameKeyword_0_0_1()); }
		'name'
		{ after(grammarAccess.getStringPropertyAccess().getKeyNameKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getStringPropertyAccess().getKeyHintKeyword_0_0_2()); }
		'hint'
		{ after(grammarAccess.getStringPropertyAccess().getKeyHintKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__KeyAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesPropertyAccess().getKeyDefaultKeyword_0_0_0()); }
		'default'
		{ after(grammarAccess.getValuesPropertyAccess().getKeyDefaultKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getValuesPropertyAccess().getKeyValuesKeyword_0_0_1()); }
		'values'
		{ after(grammarAccess.getValuesPropertyAccess().getKeyValuesKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueIntKeyword_2_0_0()); }
		'int'
		{ after(grammarAccess.getTypePropertyAccess().getValueIntKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueFloatKeyword_2_0_1()); }
		'float'
		{ after(grammarAccess.getTypePropertyAccess().getValueFloatKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueStringKeyword_2_0_2()); }
		'string'
		{ after(grammarAccess.getTypePropertyAccess().getValueStringKeyword_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueListKeyword_2_0_3()); }
		'list'
		{ after(grammarAccess.getTypePropertyAccess().getValueListKeyword_2_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueAnyKeyword_2_0_4()); }
		'any'
		{ after(grammarAccess.getTypePropertyAccess().getValueAnyKeyword_2_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueSTRINGTerminalRuleCall_2_0_5()); }
		RULE_STRING
		{ after(grammarAccess.getTypePropertyAccess().getValueSTRINGTerminalRuleCall_2_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesAccess().getGroup_0()); }
		(rule__Values__Group_0__0)
		{ after(grammarAccess.getValuesAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValuesAccess().getStringAssignment_1()); }
		(rule__Values__StringAssignment_1)
		{ after(grammarAccess.getValuesAccess().getStringAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPathAssignment_1()); }
	(rule__Import__PathAssignment_1)
	{ after(grammarAccess.getImportAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getHelpAssignment_0()); }
	(rule__Field__HelpAssignment_0)*
	{ after(grammarAccess.getFieldAccess().getHelpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getRootAssignment_1()); }
	(rule__Field__RootAssignment_1)?
	{ after(grammarAccess.getFieldAccess().getRootAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_2()); }
	(rule__Field__NameAssignment_2)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getGroup_3()); }
	(rule__Field__Group_3__0)?
	{ after(grammarAccess.getFieldAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getBodyAssignment_4()); }
	(rule__Field__BodyAssignment_4)
	{ after(grammarAccess.getFieldAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_3__0__Impl
	rule__Field__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getExtendsKeyword_3_0()); }
	'extends'
	{ after(grammarAccess.getFieldAccess().getExtendsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSuperFieldAssignment_3_1()); }
	(rule__Field__SuperFieldAssignment_3_1)
	{ after(grammarAccess.getFieldAccess().getSuperFieldAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getElementsAssignment_2()); }
	(rule__Body__ElementsAssignment_2)*
	{ after(grammarAccess.getBodyAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extend__Group__0__Impl
	rule__Extend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendAccess().getExtendKeyword_0()); }
	'extend'
	{ after(grammarAccess.getExtendAccess().getExtendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extend__Group__1__Impl
	rule__Extend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendAccess().getParentSubfieldNameAssignment_1()); }
	(rule__Extend__ParentSubfieldNameAssignment_1)
	{ after(grammarAccess.getExtendAccess().getParentSubfieldNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extend__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendAccess().getBodyAssignment_2()); }
	(rule__Extend__BodyAssignment_2)
	{ after(grammarAccess.getExtendAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__0__Impl
	rule__NestedField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getHelpAssignment_0()); }
	(rule__NestedField__HelpAssignment_0)*
	{ after(grammarAccess.getNestedFieldAccess().getHelpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__1__Impl
	rule__NestedField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getFieldKeyword_1()); }
	'field'
	{ after(grammarAccess.getNestedFieldAccess().getFieldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__2__Impl
	rule__NestedField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getMandatoryAssignment_2()); }
	(rule__NestedField__MandatoryAssignment_2)?
	{ after(grammarAccess.getNestedFieldAccess().getMandatoryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__3__Impl
	rule__NestedField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getDefaultAssignment_3()); }
	(rule__NestedField__DefaultAssignment_3)?
	{ after(grammarAccess.getNestedFieldAccess().getDefaultAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__4__Impl
	rule__NestedField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getGroup_4()); }
	(rule__NestedField__Group_4__0)?
	{ after(grammarAccess.getNestedFieldAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getBodyAssignment_5()); }
	(rule__NestedField__BodyAssignment_5)
	{ after(grammarAccess.getNestedFieldAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedField__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group_4__0__Impl
	rule__NestedField__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getExtendsKeyword_4_0()); }
	'extends'
	{ after(grammarAccess.getNestedFieldAccess().getExtendsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedField__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldAccess().getSuperFieldAssignment_4_1()); }
	(rule__NestedField__SuperFieldAssignment_4_1)
	{ after(grammarAccess.getNestedFieldAccess().getSuperFieldAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedFields__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group__0__Impl
	rule__NestedFields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getHelpAssignment_0()); }
	(rule__NestedFields__HelpAssignment_0)*
	{ after(grammarAccess.getNestedFieldsAccess().getHelpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group__1__Impl
	rule__NestedFields__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getFieldsKeyword_1()); }
	'fields'
	{ after(grammarAccess.getNestedFieldsAccess().getFieldsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group__2__Impl
	rule__NestedFields__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getGroup_2()); }
	(rule__NestedFields__Group_2__0)?
	{ after(grammarAccess.getNestedFieldsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getBodyAssignment_3()); }
	(rule__NestedFields__BodyAssignment_3)
	{ after(grammarAccess.getNestedFieldsAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedFields__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group_2__0__Impl
	rule__NestedFields__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getExtendKeyword_2_0()); }
	'extend'
	{ after(grammarAccess.getNestedFieldsAccess().getExtendKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedFields__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedFieldsAccess().getSuperFieldAssignment_2_1()); }
	(rule__NestedFields__SuperFieldAssignment_2_1)
	{ after(grammarAccess.getNestedFieldsAccess().getSuperFieldAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__0__Impl
	rule__StringProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getKeyAssignment_0()); }
	(rule__StringProperty__KeyAssignment_0)
	{ after(grammarAccess.getStringPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__1__Impl
	rule__StringProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getStringPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringPropertyAccess().getValueAssignment_2()); }
	(rule__StringProperty__ValueAssignment_2)
	{ after(grammarAccess.getStringPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValuesProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuesProperty__Group__0__Impl
	rule__ValuesProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuesPropertyAccess().getKeyAssignment_0()); }
	(rule__ValuesProperty__KeyAssignment_0)
	{ after(grammarAccess.getValuesPropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuesProperty__Group__1__Impl
	rule__ValuesProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuesPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getValuesPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValuesProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuesPropertyAccess().getValueAssignment_2()); }
	(rule__ValuesProperty__ValueAssignment_2)
	{ after(grammarAccess.getValuesPropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group__0__Impl
	rule__TypeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getKeyAssignment_0()); }
	(rule__TypeProperty__KeyAssignment_0)
	{ after(grammarAccess.getTypePropertyAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group__1__Impl
	rule__TypeProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypePropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group__2__Impl
	rule__TypeProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getValueAssignment_2()); }
	(rule__TypeProperty__ValueAssignment_2)
	{ after(grammarAccess.getTypePropertyAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getGroup_3()); }
	(rule__TypeProperty__Group_3__0)?
	{ after(grammarAccess.getTypePropertyAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeProperty__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group_3__0__Impl
	rule__TypeProperty__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getTypePropertyAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group_3__1__Impl
	rule__TypeProperty__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getHelpAssignment_3_1()); }
	(rule__TypeProperty__HelpAssignment_3_1)
	{ after(grammarAccess.getTypePropertyAccess().getHelpAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeProperty__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypePropertyAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getTypePropertyAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Values__Group_0__0__Impl
	rule__Values__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuesAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getValuesAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Values__Group_0__1__Impl
	rule__Values__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getValuesAccess().getValuesAssignment_0_1()); }
		(rule__Values__ValuesAssignment_0_1)
		{ after(grammarAccess.getValuesAccess().getValuesAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getValuesAccess().getValuesAssignment_0_1()); }
		(rule__Values__ValuesAssignment_0_1)*
		{ after(grammarAccess.getValuesAccess().getValuesAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Values__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValuesAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getValuesAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__EntriesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getEntriesSourceElementParserRuleCall_0()); }
		ruleSourceElement
		{ after(grammarAccess.getSourceAccess().getEntriesSourceElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__HelpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
		RULE_HELP_STRING
		{ after(grammarAccess.getFieldAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__RootAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getRootRootKeyword_1_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getRootRootKeyword_1_0()); }
			'root'
			{ after(grammarAccess.getFieldAccess().getRootRootKeyword_1_0()); }
		)
		{ after(grammarAccess.getFieldAccess().getRootRootKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__SuperFieldAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getSuperFieldFieldCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getFieldAccess().getSuperFieldFieldIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFieldAccess().getSuperFieldFieldIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getFieldAccess().getSuperFieldFieldCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getBodyBodyParserRuleCall_4_0()); }
		ruleBody
		{ after(grammarAccess.getFieldAccess().getBodyBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getElementsBodyElementParserRuleCall_2_0()); }
		ruleBodyElement
		{ after(grammarAccess.getBodyAccess().getElementsBodyElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__ParentSubfieldNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendAccess().getParentSubfieldNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExtendAccess().getParentSubfieldNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendAccess().getBodyBodyParserRuleCall_2_0()); }
		ruleBody
		{ after(grammarAccess.getExtendAccess().getBodyBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__HelpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
		RULE_HELP_STRING
		{ after(grammarAccess.getNestedFieldAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__MandatoryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldAccess().getMandatoryMandatoryKeyword_2_0()); }
		(
			{ before(grammarAccess.getNestedFieldAccess().getMandatoryMandatoryKeyword_2_0()); }
			'mandatory'
			{ after(grammarAccess.getNestedFieldAccess().getMandatoryMandatoryKeyword_2_0()); }
		)
		{ after(grammarAccess.getNestedFieldAccess().getMandatoryMandatoryKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__DefaultAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldAccess().getDefaultDefaultKeyword_3_0()); }
		(
			{ before(grammarAccess.getNestedFieldAccess().getDefaultDefaultKeyword_3_0()); }
			'default'
			{ after(grammarAccess.getNestedFieldAccess().getDefaultDefaultKeyword_3_0()); }
		)
		{ after(grammarAccess.getNestedFieldAccess().getDefaultDefaultKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__SuperFieldAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldAccess().getSuperFieldFieldCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getNestedFieldAccess().getSuperFieldFieldIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNestedFieldAccess().getSuperFieldFieldIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getNestedFieldAccess().getSuperFieldFieldCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedField__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldAccess().getBodyBodyParserRuleCall_5_0()); }
		ruleBody
		{ after(grammarAccess.getNestedFieldAccess().getBodyBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__HelpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldsAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
		RULE_HELP_STRING
		{ after(grammarAccess.getNestedFieldsAccess().getHelpHELP_STRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__SuperFieldAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldsAccess().getSuperFieldFieldCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getNestedFieldsAccess().getSuperFieldFieldIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNestedFieldsAccess().getSuperFieldFieldIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getNestedFieldsAccess().getSuperFieldFieldCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedFields__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedFieldsAccess().getBodyBodyParserRuleCall_3_0()); }
		ruleBody
		{ after(grammarAccess.getNestedFieldsAccess().getBodyBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertyAccess().getKeyAlternatives_0_0()); }
		(rule__StringProperty__KeyAlternatives_0_0)
		{ after(grammarAccess.getStringPropertyAccess().getKeyAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringPropertyAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesPropertyAccess().getKeyAlternatives_0_0()); }
		(rule__ValuesProperty__KeyAlternatives_0_0)
		{ after(grammarAccess.getValuesPropertyAccess().getKeyAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesPropertyAccess().getValueValuesParserRuleCall_2_0()); }
		ruleValues
		{ after(grammarAccess.getValuesPropertyAccess().getValueValuesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePropertyAccess().getKeyTypeKeyword_0_0()); }
		(
			{ before(grammarAccess.getTypePropertyAccess().getKeyTypeKeyword_0_0()); }
			'type'
			{ after(grammarAccess.getTypePropertyAccess().getKeyTypeKeyword_0_0()); }
		)
		{ after(grammarAccess.getTypePropertyAccess().getKeyTypeKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePropertyAccess().getValueAlternatives_2_0()); }
		(rule__TypeProperty__ValueAlternatives_2_0)
		{ after(grammarAccess.getTypePropertyAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeProperty__HelpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypePropertyAccess().getHelpSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypePropertyAccess().getHelpSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__ValuesAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesAccess().getValuesValuesParserRuleCall_0_1_0()); }
		ruleValues
		{ after(grammarAccess.getValuesAccess().getValuesValuesParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValuesAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getValuesAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HELP_STRING : '@' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
