/**
 * generated by Xtext 2.22.0
 */
package yaml.helper.dsl.yamlGenDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import yaml.helper.dsl.yamlGenDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class YamlGenDslFactoryImpl extends EFactoryImpl implements YamlGenDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static YamlGenDslFactory init()
  {
    try
    {
      YamlGenDslFactory theYamlGenDslFactory = (YamlGenDslFactory)EPackage.Registry.INSTANCE.getEFactory(YamlGenDslPackage.eNS_URI);
      if (theYamlGenDslFactory != null)
      {
        return theYamlGenDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new YamlGenDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public YamlGenDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case YamlGenDslPackage.SOURCE: return createSource();
      case YamlGenDslPackage.SOURCE_ELEMENT: return createSourceElement();
      case YamlGenDslPackage.IMPORT: return createImport();
      case YamlGenDslPackage.ANY_FIELD: return createAnyField();
      case YamlGenDslPackage.FIELD: return createField();
      case YamlGenDslPackage.BODY: return createBody();
      case YamlGenDslPackage.BODY_ELEMENT: return createBodyElement();
      case YamlGenDslPackage.EXTEND: return createExtend();
      case YamlGenDslPackage.ANY_NESTED_FIELD: return createAnyNestedField();
      case YamlGenDslPackage.NESTED_FIELD: return createNestedField();
      case YamlGenDslPackage.NESTED_FIELDS: return createNestedFields();
      case YamlGenDslPackage.PROPERTY: return createProperty();
      case YamlGenDslPackage.STRING_PROPERTY: return createStringProperty();
      case YamlGenDslPackage.VALUES_PROPERTY: return createValuesProperty();
      case YamlGenDslPackage.TYPE_PROPERTY: return createTypeProperty();
      case YamlGenDslPackage.VALUES: return createValues();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Source createSource()
  {
    SourceImpl source = new SourceImpl();
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SourceElement createSourceElement()
  {
    SourceElementImpl sourceElement = new SourceElementImpl();
    return sourceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyField createAnyField()
  {
    AnyFieldImpl anyField = new AnyFieldImpl();
    return anyField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Field createField()
  {
    FieldImpl field = new FieldImpl();
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Body createBody()
  {
    BodyImpl body = new BodyImpl();
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BodyElement createBodyElement()
  {
    BodyElementImpl bodyElement = new BodyElementImpl();
    return bodyElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Extend createExtend()
  {
    ExtendImpl extend = new ExtendImpl();
    return extend;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyNestedField createAnyNestedField()
  {
    AnyNestedFieldImpl anyNestedField = new AnyNestedFieldImpl();
    return anyNestedField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NestedField createNestedField()
  {
    NestedFieldImpl nestedField = new NestedFieldImpl();
    return nestedField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NestedFields createNestedFields()
  {
    NestedFieldsImpl nestedFields = new NestedFieldsImpl();
    return nestedFields;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringProperty createStringProperty()
  {
    StringPropertyImpl stringProperty = new StringPropertyImpl();
    return stringProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValuesProperty createValuesProperty()
  {
    ValuesPropertyImpl valuesProperty = new ValuesPropertyImpl();
    return valuesProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeProperty createTypeProperty()
  {
    TypePropertyImpl typeProperty = new TypePropertyImpl();
    return typeProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Values createValues()
  {
    ValuesImpl values = new ValuesImpl();
    return values;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public YamlGenDslPackage getYamlGenDslPackage()
  {
    return (YamlGenDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static YamlGenDslPackage getPackage()
  {
    return YamlGenDslPackage.eINSTANCE;
  }

} //YamlGenDslFactoryImpl
