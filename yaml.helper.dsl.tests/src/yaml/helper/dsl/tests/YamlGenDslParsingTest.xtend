/*
 * generated by Xtext 2.22.0
 */
package yaml.helper.dsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import yaml.helper.dsl.yamlGenDsl.Source

@ExtendWith(InjectionExtension)
@InjectWith(YamlGenDslInjectorProvider)
class YamlGenDslParsingTest {
	@Inject
	ParseHelper<Source> parseHelper
	
	@Test
	def void simpleTest() {
		val result = parseHelper.parse('''
			import "asd"
			TestField1 {}
			
			TestField2 extends TestField1 {
				
			}
			root TestField3{}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
	
	@Test
	def void bodyTest() {
		val result = parseHelper.parse('''
			TestField1 {
				name: "test-field"
				default: "asd"
				hint: "asd"
				values: "asd"
			}
			TestField2 extends TestField1 {
				values: ["asd" "aaa"]
				field mandatory {
					name: "inline-field"
					hint: "test"
				}
				field extends TestField1 {
					name: "inline-child-field"
					hint: "test"
				}
			}
			TestField3 extends TestField2 {
				extend "inline-field" {
					hint: "test1"
				}
			}
			
			TestField4 {
				fields {
				}
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
